AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  dc-api-v2

  Sample SAM Template for dc-api-v2
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    CodeUri: ./src
    Runtime: nodejs16.x
    Architectures:
      - x86_64
    MemorySize: 128
    Timeout: 3
    Environment:
      Variables:
        API_TOKEN_NAME: !Ref ApiTokenName
        API_TOKEN_SECRET: !Ref ApiTokenSecret
        DC_API_ENDPOINT: !Ref DcApiEndpoint
        DC_URL: !Ref DcUrl
        ELASTICSEARCH_ENDPOINT: !Ref ElasticsearchEndpoint
        ENV_PREFIX: !Ref EnvironmentPrefix
        HONEYBADGER_API_KEY: !Ref HoneybadgerApiKey
        HONEYBADGER_ENV: !Ref HoneybadgerEnv
        HONEYBADGER_REVISION: !Ref HoneybadgerRevision
        READING_ROOM_IPS: !Ref ReadingRoomIPs
Parameters:
  ApiTokenName:
    Type: String
    Description: Name of the jwt that DC API issues
  ApiTokenSecret:
    Type: String
    Description: Secret Key for Encrypting JWTs (must match IIIF server)
  AvDownloadStateMachineArn:
    Type: String
    Description: Arn for AV Download state machine
  CustomDomainCertificateArn:
    Type: String
    Description: SSL Certificate for the Custom Domain Name
  CustomDomainZone:
    Type: String
    Description: Hosted Zone Name for Custom Domain
  CustomDomainHost:
    Type: String
    Description: Hostname within ApiDomainName for Custom Domain
  DcApiEndpoint:
    Type: String
    Description: URL for DC API
  DcUrl:
    Type: String
    Description: URL of Digital Collections website
  ElasticsearchEndpoint:
    Type: String
    Description: Elasticsearch url
  EnvironmentPrefix:
    Type: String
    Description: Index Prefix
    Default: ""
  HoneybadgerApiKey:
    Type: String
    Description: Honeybadger API Key
    Default: ""
  HoneybadgerEnv:
    Type: String
    Description: Honeybadger Environment
    Default: ""
  HoneybadgerRevision:
    Type: String
    Description: Honeybadger Revision
    Default: ""
  MediaConvertDestinationBucket: 
    Type: String
    Description: S3 bucket destination for transcoded AV resource
    Default: ""
  MediaConvertEndpoint: 
    Type: String
    Description: MediaConvert endpoint
    Default: ""
  MediaConvertJobQueueArn: 
    Type: String
    Description: Job Queue ARN for MediaConvert
    Default: ""
  MediaConvertRoleArn: 
    Type: String
    Description: MediaConvert role ARN
    Default: ""
  NussoApiKey:
    Type: String
    Description: API key for auth server
  NussoBaseUrl:
    Type: String
    Description: Auth server URL
  ReadingRoomIPs:
    Type: String
    Description: Comma-delimited list of IP addresses to serve private resources to
  StreamingBucket:
    Type: String
    Description: Meadow streaming bucket
Resources:
  # V2 API
  getAuthCallbackFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/get-auth-callback.handler
      Description: NUSSO callback function.
      Environment:
        Variables:
          NUSSO_API_KEY: !Ref NussoApiKey
          NUSSO_BASE_URL: !Ref NussoBaseUrl
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /auth/callback
            Method: GET
        ApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /auth/callback
            Method: HEAD
  getAuthLoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/get-auth-login.handler
      Description: Performs NUSSO login.
      Environment:
        Variables:
          NUSSO_API_KEY: !Ref NussoApiKey
          NUSSO_BASE_URL: !Ref NussoBaseUrl
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /auth/login
            Method: GET
  getAuthLogoutFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/get-auth-logout.handler
      Description: Performs NUSSO logout.
      Environment:
        Variables:
          NUSSO_API_KEY: !Ref NussoApiKey
          NUSSO_BASE_URL: !Ref NussoBaseUrl
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /auth/logout
            Method: GET
  getAuthWhoAmIFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/get-auth-whoami.handler
      Description: Exchanges valid JWT token for user information.
      Environment:
        Variables:
          NUSSO_API_KEY: !Ref NussoApiKey
          NUSSO_BASE_URL: !Ref NussoBaseUrl
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /auth/whoami
            Method: GET
  getCollectionsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/get-collections.handler
      Description: Gets Collections.
      Policies:
        Version: 2012-10-17
        Statement:
          - Sid: ESHTTPPolicy
            Effect: Allow
            Action:
              - es:ESHttp*
            Resource: "*"
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /collections
            Method: GET
        ApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /collections
            Method: HEAD
  getCollectionByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/get-collection-by-id.handler
      Description: Gets a Collection by id.
      Policies:
        Version: 2012-10-17
        Statement:
          - Sid: ESHTTPPolicy
            Effect: Allow
            Action:
              - es:ESHttp*
            Resource: "*"
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /collections/{id}
            Method: GET
        ApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /collections/{id}
            Method: HEAD
  getFileSetByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/get-file-set-by-id.handler
      Description: Gets a FileSet by id.
      Policies:
        Version: 2012-10-17
        Statement:
          - Sid: ESHTTPPolicy
            Effect: Allow
            Action:
              - es:ESHttp*
            Resource: "*"
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /file-sets/{id}
            Method: GET
        ApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /file-sets/{id}
            Method: HEAD
  getFileSetAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/get-file-set-auth.handler
      Description: Authorizes access to a file set.
      Environment:
        Variables:
          USE_PROXIED_IP: true
      Policies:
        Version: 2012-10-17
        Statement:
          - Sid: ESHTTPPolicy
            Effect: Allow
            Action:
              - es:ESHttp*
            Resource: "*"
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /file-sets/{id}/authorization
            Method: GET
        ApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /file-sets/{id}/authorization
            Method: HEAD
  getFileSetDownloadFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/get-file-set-download.handler
      Description: Downloads a file set.
      Environment:
        Variables:
          USE_PROXIED_IP: true
          STREAMING_BUCKET: !Ref StreamingBucket
          MEDIA_CONVERT_DESTINATION_BUCKET: !Ref MediaConvertDestinationBucket
          MEDIA_CONVERT_ENDPOINT: !Ref MediaConvertEndpoint
          MEDIA_CONVERT_JOB_QUEUE_ARN: !Ref MediaConvertJobQueueArn
          MEDIA_CONVERT_ROLE_ARN: !Ref MediaConvertRoleArn
      Policies:
        Version: 2012-10-17
        Statement:
          - Sid: ESHTTPPolicy
            Effect: Allow
            Action:
              - es:ESHttp*
            Resource: "*"
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /file-sets/{id}/download
            Method: GET
        ApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /file-sets/{id}/download
            Method: HEAD
  getWorkAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/get-work-auth.handler
      Description: Authorizes access to a work.
      Environment:
        Variables:
          USE_PROXIED_IP: true
      Policies:
        Version: 2012-10-17
        Statement:
          - Sid: ESHTTPPolicy
            Effect: Allow
            Action:
              - es:ESHttp*
            Resource: "*"
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /works/{id}/authorization
            Method: GET
        ApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /works/{id}/authorization
            Method: HEAD
  getWorkByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/get-work-by-id.handler
      Description: Gets a Work by id.
      Environment:
        Variables:
          USE_PROXIED_IP: true
      Policies:
        Version: 2012-10-17
        Statement:
          - Sid: ESHTTPPolicy
            Effect: Allow
            Action:
              - es:ESHttp*
            Resource: "*"
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /works/{id}
            Method: GET
        ApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /works/{id}
            Method: HEAD
  getThumbnailFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/get-thumbnail.handler
      Description: Gets a Work's representative thumbnail.
      Timeout: 10
      Policies:
        Version: 2012-10-17
        Statement:
          - Sid: ESHTTPPolicy
            Effect: Allow
            Action:
              - es:ESHttp*
            Resource: "*"
      Events:
        CollectionApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /collections/{id}/thumbnail
            Method: GET
        CollectionApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /collections/{id}/thumbnail
            Method: HEAD
        WorkApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /works/{id}/thumbnail
            Method: GET
        WorkApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /works/{id}/thumbnail
            Method: HEAD
  getSimilarFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/get-similar.handler
      Timeout: 100
      Description: Gets works similar to a specific work.
      Policies:
        Version: 2012-10-17
        Statement:
          - Sid: ESHTTPPolicy
            Effect: Allow
            Action:
              - es:ESHttp*
            Resource: "*"
      Events:
        WorkApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /works/{id}/similar
            Method: GET
        WorkApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /works/{id}/similar
            Method: HEAD
  searchPostFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/search.postSearch
      Description: Handles OpenSearch search requests, Works only by default.
      Policies:
        Version: 2012-10-17
        Statement:
          - Sid: ESHTTPPolicy
            Effect: Allow
            Action:
              - es:ESHttp*
            Resource: "*"
      Events:
        SearchApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /search
            Method: POST
        SearchWithModelsApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /search/{models}
            Method: POST
  searchGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/search.getSearch
      Description: Handles paging requests
      Policies:
        Version: 2012-10-17
        Statement:
          - Sid: ESHTTPPolicy
            Effect: Allow
            Action:
              - es:ESHttp*
            Resource: "*"
      Events:
        SearchApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /search
            Method: GET
        SearchApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /search
            Method: HEAD
        SearchWithModelsApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /search/{models}
            Method: GET
        SearchWithModelsApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /search/{models}
            Method: HEAD
  optionsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/options-request.handler
      Timeout: 3
      Description: Handles all OPTIONS requests
      Events:
        Everything:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /{proxy+}
            Method: OPTIONS
  getSharedLinkByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/get-shared-link-by-id.handler
      Description: Gets a shared link document by id.
      Policies:
        Version: 2012-10-17
        Statement:
          - Sid: ESHTTPPolicy
            Effect: Allow
            Action:
              - es:ESHttp*
            Resource: "*"
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /shared-links/{id}
            Method: GET
        ApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /shared-links/{id}
            Method: HEAD
  oaiFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/oai.handler
      Description: Transforms works into OAI Records.
      Timeout: 60
      Policies:
        Version: 2012-10-17
        Statement:
          - Sid: ESHTTPPolicy
            Effect: Allow
            Action:
              - es:ESHttp*
            Resource: "*"
      Events:
        GetApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /oai
            Method: GET
        GetApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /oai
            Method: HEAD
        PostApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /oai
            Method: POST
  defaultFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/default-request.handler
      Timeout: 3
      Description: Handles all other requests
      Events:
        Everything:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: $default
            Method: ANY
  mediaTranscodeFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs18.x
      CodeUri: ./lambda
      Handler: media-transcode.handler
      Description: Creates MediaConvert Job to transcode HLS stream
      Environment:
        Variables:
          AV_DOWNLOAD_STATE_MACHINE_ARN: !Ref AvDownloadStateMachineArn
          MEDIA_CONVERT_DESTINATION_BUCKET: !Ref MediaConvertDestinationBucket
          MEDIA_CONVERT_ENDPOINT: !Ref MediaConvertEndpoint
          MEDIA_CONVERT_JOB_QUEUE_ARN: !Ref MediaConvertJobQueueArn
          MEDIA_CONVERT_ROLE_ARN: !Ref MediaConvertRoleArn
  transcodeCompleteFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs18.x
      CodeUri: ./lambda
      Handler: check-transcode-job.handler
      Description: Determines when transcode job has completed or errored
      Environment:
        Variables:
          MEDIA_CONVERT_ENDPOINT: !Ref MediaConvertEndpoint
  generateDownloadLinkFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs18.x
      CodeUri: ./lambda
      Handler: presigned-url.handler
      Description: Creates presigned url
      Environment:
        Variables:
          MEDIA_CONVERT_ENDPOINT: !Ref MediaConvertEndpoint
  dcApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: v2
      StageVariables:
        basePath: api/v2
      Domain:
        DomainName: !Sub "${CustomDomainHost}.${CustomDomainZone}"
        BasePath: api/v2
        CertificateArn: !Ref CustomDomainCertificateArn
        Route53:
          HostedZoneName: !Sub "${CustomDomainZone}."

  # root API
  rootApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: latest
  rootRedirect:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./redirect
      Handler: index.handler
      Timeout: 1
      Description: Redirects to latest version of docs
      Environment:
        Variables:
          REDIRECT_TO: /docs/v2/index.html
      Events:
        RedirectApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref rootApi
            Path: /
            Method: GET
        RedirectApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref rootApi
            Path: /
            Method: HEAD

  # Documentation
  docsMapping:
    Type: AWS::ApiGatewayV2::ApiMapping
    Properties:
      DomainName: !Sub "${CustomDomainHost}.${CustomDomainZone}"
      ApiId: !Ref rootApi
      Stage: !Ref rootApilatestStage
    DependsOn: dcApi
  docsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${CustomDomainHost}-docs.${CustomDomainZone}"
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
  docsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::${docsBucket}/*"
      Bucket: !Ref docsBucket
  docsIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref rootApi
      IntegrationMethod: GET
      IntegrationType: HTTP_PROXY
      IntegrationUri: !Sub "http://${docsBucket}.s3-website-us-east-1.amazonaws.com/{proxy}"
      PayloadFormatVersion: "1.0"
  docsRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref rootApi
      AuthorizationType: NONE
      RouteKey: GET /docs/v2/{proxy+}
      Target: !Sub "integrations/${docsIntegration}"
