# Build and Deploy Template for DC API
#
# Note: Any comment starting with `#*` will be removed
# at build time. This allows us to run without the
# dependency layer in development without removing the
# layer from the build.

AWSTemplateFormatVersion: "2010-09-09"
Transform:
  - AWS::Serverless-2016-10-31
  - AWS::LanguageExtensions
Description: dc-api-v2 API
Globals:
  Function:
    CodeUri: ./src
    Runtime: nodejs20.x
    Architectures:
      - x86_64
    MemorySize: 128
    Timeout: 10
    Environment:
      Variables:
        API_CONFIG_PREFIX: !Ref ApiConfigPrefix
        API_TOKEN_NAME: !Ref ApiTokenName
        DC_API_ENDPOINT: !Ref DcApiEndpoint
        DC_URL: !Ref DcUrl
        DEFAULT_SEARCH_SIZE: "100"
        DEV_TEAM_NET_IDS: !Ref DevTeamNetIds
        ENV_PREFIX: !Ref EnvironmentPrefix
        HONEYBADGER_API_KEY: !Ref HoneybadgerApiKey
        HONEYBADGER_ENV: !Ref HoneybadgerEnv
        HONEYBADGER_REVISION: !Ref HoneybadgerRevision
        PROVIDERS_FEATURES: !Ref ProvidersFeatures
        READING_ROOM_IPS: !Ref ReadingRoomIPs
        SECRETS_PATH: !Ref SecretsPath
Parameters:
  ApiConfigPrefix:
    Type: String
    Description: Secret Name for API Configuration (if not provided, will use SecretsPath)
    Default: ""
  ApiTokenName:
    Type: String
    Description: Name of the jwt that DC API issues
  ApiTokenSecret:
    Type: String
    Description: Secret Key for Encrypting JWTs (must match IIIF server)
  ChatWebSocketURI:
    Type: String
    Description: URI of the chat websocket API
    Default: ""
  CustomDomainCertificateArn:
    Type: String
    Description: SSL Certificate for the Custom Domain Name
  CustomDomainZone:
    Type: String
    Description: Hosted Zone Name for Custom Domain
  CustomDomainHost:
    Type: String
    Description: Hostname within ApiDomainName for Custom Domain
  DcApiEndpoint:
    Type: String
    Description: URL for DC API
  DcUrl:
    Type: String
    Description: URL of Digital Collections website
  DeployAPI:
    Type: String
    Description: Whether to deploy all the API functions or only the ones required for other stacks
  DeployAVDownload:
    Type: String
    Description: Set to true to deploy AVDownload
  DeployChat:
    Type: String
    Description: Set to true to deploy Chat
  DevTeamNetIds:
    Type: String
    Description: Northwestern NetIDs of the development team
  EnvironmentPrefix:
    Type: String
    Description: Index Prefix
    Default: ""
  HoneybadgerApiKey:
    Type: String
    Description: Honeybadger API Key
    Default: ""
  HoneybadgerEnv:
    Type: String
    Description: Honeybadger Environment
    Default: ""
  HoneybadgerRevision:
    Type: String
    Description: Honeybadger Revision
    Default: ""
  ProvidersFeatures:
    Type: String
    Description: Currently enabled features per auth provider
    Default: |
      {"magic":["chat"],"nusso":["chat"]}
  PyramidBucket:
    Type: String
    Description: Meadow Pyramid Bucket
  ReadingRoomIPs:
    Type: String
    Description: Comma-delimited list of IP addresses to serve private resources to
  RepositoryEmail:
    Type: String
    Description: Verified email address to use as sender
  SecretsPath:
    Type: String
    Description: Prefix to use when loading configs from Secrets Manager
  SecretsPolicy:
    Type: String
    Description: Policy that allows reading of required secrets
  WriteConfigSecret:
    Type: String
    Description: Set to something other than "true" to _not_ write configuration secrets
    Default: "true"
Conditions:
  CustomConfigSecret:
    Fn::Not:
    - Fn::Equals:
      - !Ref ApiConfigPrefix
      - ""
  DeployAPI:
    Fn::Equals: [!Ref DeployAPI, "true"]
  DeployAVDownload:
    Fn::Equals: [!Ref DeployAVDownload, "true"]
  DeployChat:
    Fn::Equals: [!Ref DeployChat, "true"]
  WriteSecret:
    Fn::Equals:
    - !Ref WriteConfigSecret
    - true
Resources:
  #* apiDependencies:
  #*   Type: AWS::Serverless::LayerVersion
  #*   Properties:
  #*     LayerName: !Sub "${AWS::StackName}-api-dependencies"
  #*     Description: Dependencies for API handlers
  #*     ContentUri: ./dependencies
  #*     CompatibleRuntimes:
  #*       - nodejs20.x
  #*     LicenseInfo: Apache-2.0
  #*   Metadata:
  #*     BuildMethod: nodejs20.x
  # Configuration
  apiConfiguration:
    Type: AWS::SecretsManager::Secret
    Condition: WriteSecret
    Properties:
      Name: 
        Fn::If:
          - CustomConfigSecret
          - !Sub "${ApiConfigPrefix}/config/dcapi"
          - !Sub "${SecretsPath}/config/dcapi"
      SecretString:
        Fn::ToJsonString:
          api_token_secret: !Ref ApiTokenSecret
          base_url: !Sub "https://${CustomDomainHost}.${CustomDomainZone}/api/v2"
  readIndexPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ESHTTPPolicy
            Effect: Allow
            Action:
              - es:ESHttp*
            Resource: "*"
  # V2 API
  getAuthLogoutFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/get-auth-logout.handler
      Description: Performs NUSSO logout.
      #* Layers:
      #*   - !Ref apiDependencies
      Policies:
        - !Ref SecretsPolicy
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /auth/logout
            Method: GET
  getAuthTokenFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/get-auth-token.handler
      Description: Function to retrieve raw JWT.
      #* Layers:
      #*   - !Ref apiDependencies
      Policies:
        - !Ref SecretsPolicy
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /auth/token
            Method: GET
        ApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /auth/token
            Method: HEAD
  getAuthWhoAmIFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/get-auth-whoami.handler
      Description: Exchanges valid JWT token for user information.
      #* Layers:
      #*   - !Ref apiDependencies
      Policies:
        - !Ref SecretsPolicy
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /auth/whoami
            Method: GET
  getAuthRoutingFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/get-auth-stage.handler
      Description: Handles login/callback stages for all login providers.
      #* Layers:
      #*   - !Ref apiDependencies
      Policies:
        - !Ref SecretsPolicy
        - Version: 2012-10-17
          Statement:
            - Sid: SESSendEmail
              Effect: Allow
              Action:
                - ses:SendTemplatedEmail
              Resource: "*"
      Environment:
        Variables:
          MAGIC_LINK_EMAIL_TEMPLATE: !Ref magicLinkEmailTemplate
          REPOSITORY_EMAIL: !Ref RepositoryEmail
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /auth/login
            Method: GET
        ApiGetProvider:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /auth/{stage}/{provider}
            Method: GET
        ApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /auth/{stage}/{provider}
            Method: HEAD
  getCollectionsFunction:
    Type: AWS::Serverless::Function
    Condition: DeployAPI
    Properties:
      Handler: handlers/get-collections.handler
      Description: Gets Collections.
      #* Layers:
      #*   - !Ref apiDependencies
      Policies:
        - !Ref SecretsPolicy
        - !Ref readIndexPolicy
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /collections
            Method: GET
        ApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /collections
            Method: HEAD
  getCollectionByIdFunction:
    Type: AWS::Serverless::Function
    Condition: DeployAPI
    Properties:
      Handler: handlers/get-collection-by-id.handler
      Description: Gets a Collection by id.
      #* Layers:
      #*   - !Ref apiDependencies
      Policies:
        - !Ref SecretsPolicy
        - !Ref readIndexPolicy
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /collections/{id}
            Method: GET
        ApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /collections/{id}
            Method: HEAD
  getFileSetByIdFunction:
    Type: AWS::Serverless::Function
    Condition: DeployAPI
    Properties:
      Handler: handlers/get-file-set-by-id.handler
      Description: Gets a FileSet by id.
      #* Layers:
      #*   - !Ref apiDependencies
      Policies:
        - !Ref SecretsPolicy
        - !Ref readIndexPolicy
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /file-sets/{id}
            Method: GET
        ApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /file-sets/{id}
            Method: HEAD
  getFileSetAuthFunction:
    Type: AWS::Serverless::Function
    Condition: DeployAPI
    Properties:
      Handler: handlers/get-file-set-auth.handler
      Description: Authorizes access to a file set.
      #* Layers:
      #*   - !Ref apiDependencies
      Environment:
        Variables:
          USE_PROXIED_IP: true
      Policies:
        - !Ref SecretsPolicy
        - !Ref readIndexPolicy
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /file-sets/{id}/authorization
            Method: GET
        ApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /file-sets/{id}/authorization
            Method: HEAD
  getFileSetDownloadFunction:
    Type: AWS::Serverless::Function
    Condition: DeployAVDownload
    Properties:
      Handler: handlers/get-file-set-download.handler
      Description: Downloads a file set.
      #* Layers:
      #*   - !Ref apiDependencies
      Environment:
        Variables:
          AV_DOWNLOAD_EMAIL_TEMPLATE: !Ref AWS::NoValue
          AV_DOWNLOAD_STATE_MACHINE_ARN: !Ref AWS::NoValue
          GET_DOWNLOAD_LINK_FUNCTION: !Ref AWS::NoValue
          MEDIA_CONVERT_DESTINATION_BUCKET: !Ref AWS::NoValue
          MEDIA_CONVERT_ENDPOINT: !Ref AWS::NoValue
          MEDIA_CONVERT_JOB_QUEUE_ARN: !Ref AWS::NoValue
          MEDIA_CONVERT_ROLE_ARN: !Ref AWS::NoValue
          PYRAMID_BUCKET: !Ref AWS::NoValue
          REPOSITORY_EMAIL: !Ref AWS::NoValue
          SEND_TEMPLATED_EMAIL_FUNCTION: !Ref AWS::NoValue
          START_AUDIO_TRANSCODE_FUNCTION: !Ref AWS::NoValue
          START_TRANSCODE_FUNCTION: !Ref AWS::NoValue
          STEP_FUNCTION_ENDPOINT: !Ref AWS::NoValue
          STREAMING_BUCKET: !Ref AWS::NoValue
          TRANSCODE_STATUS_FUNCTION: !Ref AWS::NoValue
      Policies:
        - !Ref SecretsPolicy
        - Version: 2012-10-17
          Statement:
            - Sid: ExecuteAVDownloadStepFunction
              Effect: Allow
              Action:
                - states:StartExecution
              Resource:
                - "*"
            - Sid: BucketAccess
              Effect: Allow
              Action:
                - s3:GetObject
              Resource: !Sub "arn:aws:s3:::${PyramidBucket}/*"
            - Sid: ESHTTPPolicy
              Effect: Allow
              Action:
                - es:ESHttp*
              Resource: "*"
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /file-sets/{id}/download
            Method: GET
        ApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /file-sets/{id}/download
            Method: HEAD
  getProviderFeatureStatus:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/get-provider-feature-status.handler
      Description: boolean to indicate whether auth provider currently supports feature  
      #* Layers:
      #*   - !Ref apiDependencies
      Environment: 
        Variables:
          PROVIDERS_FEATURES: !Ref ProvidersFeatures
      Policies:
        - !Ref SecretsPolicy
        - !Ref readIndexPolicy
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /status/{provider}/{feature}
            Method: GET
        ApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /status/{provider}/{feature}
            Method: HEAD
  getWorkAuthFunction:
    Type: AWS::Serverless::Function
    Condition: DeployAPI
    Properties:
      Handler: handlers/get-work-auth.handler
      Description: Authorizes access to a work.
      #* Layers:
      #*   - !Ref apiDependencies
      Environment:
        Variables:
          USE_PROXIED_IP: true
      Policies:
        - !Ref SecretsPolicy
        - !Ref readIndexPolicy
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /works/{id}/authorization
            Method: GET
        ApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /works/{id}/authorization
            Method: HEAD
  getWorkByIdFunction:
    Type: AWS::Serverless::Function
    Condition: DeployAPI
    Properties:
      Handler: handlers/get-work-by-id.handler
      Description: Gets a Work by id.
      #* Layers:
      #*   - !Ref apiDependencies
      Environment:
        Variables:
          USE_PROXIED_IP: true
      Policies:
        - !Ref SecretsPolicy
        - !Ref readIndexPolicy
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /works/{id}
            Method: GET
        ApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /works/{id}
            Method: HEAD
  getThumbnailFunction:
    Type: AWS::Serverless::Function
    Condition: DeployAPI
    Properties:
      Handler: handlers/get-thumbnail.handler
      Description: Gets a Work's representative thumbnail.
      #* Layers:
      #*   - !Ref apiDependencies
      Policies:
        - !Ref SecretsPolicy
        - !Ref readIndexPolicy
      Events:
        CollectionApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /collections/{id}/thumbnail
            Method: GET
        CollectionApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /collections/{id}/thumbnail
            Method: HEAD
        WorkApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /works/{id}/thumbnail
            Method: GET
        WorkApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /works/{id}/thumbnail
            Method: HEAD
  getSimilarFunction:
    Type: AWS::Serverless::Function
    Condition: DeployAPI
    Properties:
      Handler: handlers/get-similar.handler
      Timeout: 100
      Description: Gets works similar to a specific work.
      #* Layers:
      #*   - !Ref apiDependencies
      Policies:
        - !Ref SecretsPolicy
        - !Ref readIndexPolicy
      Events:
        WorkApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /works/{id}/similar
            Method: GET
        WorkApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /works/{id}/similar
            Method: HEAD
  searchPostFunction:
    Type: AWS::Serverless::Function
    Condition: DeployAPI
    Properties:
      Handler: handlers/search.postSearch
      Description: Handles OpenSearch search requests, Works only by default.
      #* Layers:
      #*   - !Ref apiDependencies
      Policies:
        - !Ref SecretsPolicy
        - !Ref readIndexPolicy
      Events:
        SearchApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /search
            Method: POST
        SearchWithModelsApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /search/{models}
            Method: POST
  searchGetFunction:
    Type: AWS::Serverless::Function
    Condition: DeployAPI
    Properties:
      Handler: handlers/search.getSearch
      Description: Handles paging requests
      #* Layers:
      #*   - !Ref apiDependencies
      Policies:
        - !Ref SecretsPolicy
        - !Ref readIndexPolicy
      Events:
        SearchApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /search
            Method: GET
        SearchApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /search
            Method: HEAD
        SearchWithModelsApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /search/{models}
            Method: GET
        SearchWithModelsApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /search/{models}
            Method: HEAD
  optionsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers/options-request.handler
      Timeout: 3
      Description: Handles all OPTIONS requests
      #* Layers:
      #*   - !Ref apiDependencies
      Policies:
        - !Ref SecretsPolicy
      Events:
        Everything:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /{proxy+}
            Method: OPTIONS
  getSharedLinkByIdFunction:
    Type: AWS::Serverless::Function
    Condition: DeployAPI
    Properties:
      Handler: handlers/get-shared-link-by-id.handler
      Description: Gets a shared link document by id.
      #* Layers:
      #*   - !Ref apiDependencies
      Policies:
        - !Ref SecretsPolicy
        - !Ref readIndexPolicy
      Events:
        ApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /shared-links/{id}
            Method: GET
        ApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /shared-links/{id}
            Method: HEAD
  oaiFunction:
    Type: AWS::Serverless::Function
    Condition: DeployAPI
    Properties:
      Handler: handlers/oai.handler
      Description: Transforms works into OAI Records.
      #* Layers:
      #*   - !Ref apiDependencies
      Timeout: 60
      Policies:
        - !Ref SecretsPolicy
        - !Ref readIndexPolicy
      Events:
        GetApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /oai
            Method: GET
        GetApiHead:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /oai
            Method: HEAD
        PostApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /oai
            Method: POST
  chatWebsocketEndpoint:
    Type: AWS::Serverless::Function
    Condition: DeployChat
    Properties:
      Handler: handlers/get-chat-endpoint.handler
      Description: Returns the URI of the chat websocket API.
      #* Layers:
      #*   - !Ref apiDependencies
      Environment:
       Variables:
         WEBSOCKET_URI: !Ref ChatWebSocketURI
      Policies:
        - !Ref SecretsPolicy
      Events:
        GetApiGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /chat/endpoint
            Method: GET
  chatFeedback:
    Type: AWS::Serverless::Function
    Condition: DeployChat
    Properties:
      Environment:
        Variables:
          CHAT_FEEDBACK_BUCKET: !Ref chatFeedbackBucket
          CHAT_FEEDBACK_TOPIC_ARN: !Ref chatFeedbackTopic
      Handler: handlers/post-chat-feedback.handler
      Description: Handles feedback from the chat.
      #* Layers:
      #*   - !Ref apiDependencies
      Policies:
        - !Ref SecretsPolicy
        - Version: 2012-10-17
          Statement:
            - Sid: BucketAccess
              Effect: Allow
              Action:
                - s3:PutObject
              Resource: !Sub "arn:aws:s3:::${chatFeedbackBucket}/*"
            - Sid: TopicAccess
              Effect: Allow
              Action:
                - sns:Publish
              Resource: !Ref chatFeedbackTopic
      Events:
        PostApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref dcApi
            Path: /chat/feedback
            Method: POST
  chatFeedbackBucket:
    Type: 'AWS::S3::Bucket'
  chatFeedbackTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: DC Chat Feedback
      TopicName: !Sub "${AWS::StackName}-chat-feedback"
  dcApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: v2
      StageVariables:
        basePath: api/v2
  apiMapping:
    Type: AWS::ApiGatewayV2::ApiMapping
    Properties:
      DomainName: !Sub "${CustomDomainHost}.${CustomDomainZone}"
      ApiMappingKey: api/v2
      ApiId: !Ref dcApi
      Stage: !Ref dcApiv2Stage
  magicLinkEmailTemplate:
    Type: AWS::SES::Template
    Properties:
      Template:
        TemplateName: !Sub "${AWS::StackName}-magic-link-template"
        SubjectPart: "Login Link for NUL Digital Collections"
        TextPart: |
          Hello,

          You recently requested a login link for NUL Digital Collections. Click the link below to log in, 
          or copy and paste it into your browser's address bar:

          {{magicLink}}

          This link will expire in 15 minutes.

          If you did not request this email, you can safely ignore it.

          Thank you,
          The NUL Digital Collections Team
        HtmlPart: |
          <!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN' 'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'>
          <html xmlns='http://www.w3.org/1999/xhtml'>
            <head>
              <meta http-equiv='Content-Type' content='text/html; charset=utf-8' />
              <title>Login Link for NUL Digital Collections</title>
              <meta content='IE=edge' http-equiv='X-UA-Compatible' />
              <style>
                p {
                  margin-top: 0;
                  line-height: 1.4em;
                }
                a {
                  color: #4e2a84;
                }
                @media only screen and (max-width: 599px) {
                  table[class='body-table'] {
                    width: 100%;
                  }
                  img {
                    max-width: 100%;
                    height: auto !important;
                  }
                }
                @media only screen and (max-width: 510px) {
                  table[class='inside-table'] {
                    width: 100%;
                    padding: 0 10px 0 10px !important;
                  }
                  table[class='quote-table'] {
                    width: 100%;
                  }
                  table[class='quote-image-table'] {
                    width: 100%;
                  }
                }
              </style>
            </head>

            <body
              style='
                background-color: #f1f0f0;
                padding: 0;
                margin: 0;
                font-family: Arial, Helvetica Neue, Helvetica, sans-serif;
                font-size: 17px;
                color: #342f2e;
              '
            >
              <!--[if gte mso 15]><table border='0' cellpadding='0' cellspacing='0' width='100%' align='left'><tr><td><![endif]-->
              <table
                align='center'
                border='0'
                cellpadding='0'
                cellspacing='0'
                class='body-table'
                style='border: 1px solid #d8d6d6; background-color: #ffffff'
                width='600'
              >
                <!-- header -->
                <tbody>
                  <tr>
                    <td>
                      <table
                        border='0'
                        cellpadding='0'
                        cellspacing='0'
                        style='margin-bottom: 40px'
                        width='100%'
                      >
                        <tbody>
                          <tr>
                            <td
                              align='center'
                              height='110'
                              style='background-color: #4e2a84; padding: 0 10px 0 10px'
                              valign='middle'
                            >
                              <h1>
                                <img src='https://nul-public.s3.amazonaws.com/work-archiver/northwestern_logo.png' alt='Northwestern University Logo' />
                              </h1>
                            </td>
                          </tr>
                          <tr>
                            <td
                              align='center'
                              height='40'
                              style='
                                background-color: #401f68;
                                font-size: 13px;
                                color: #ffffff;
                                font-style: italic;
                              '
                              valign='middle'
                            ></td>
                          </tr>
                        </tbody>
                      </table>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <table
                        align='center'
                        border='0'
                        cellpadding='0'
                        cellspacing='0'
                        class='inside-table'
                        style='margin-bottom: 40px; padding: 0 66px 0 66px'
                        width='100%'
                      >
                        <tbody>
                          <tr>
                            <td style='padding-bottom: 5px'>
                              <h2
                                style='
                                  margin: 12px 0;
                                  font-size: 32px;
                                  line-height: 1.2em;
                                '
                              >
                                Hello,
                              </h2>
                              <p>
                                You recently requested a login link for 
                                <span style='font-weight: bold;'>NUL Digital Collections</span>. 
                                Click the button below to log in:
                              </p>
                              <p style='text-align: center'>
                                <a href='{{magicLink}}' target='_blank' style='display: inline-block; padding: 16px 32px; font-family: Arial, sans-serif; font-size: 18px; color: #ffffff; text-decoration: none; border-radius: 6px; background-color: #4e2a84;'>
                                  Log In
                                </a>
                              </p>
                              <p style='text-align: center; font-style: italic'>
                                (This <a href='{{magicLink}}'>link</a> will expire in 15 minutes. If you did not request this email, you can safely ignore it.)
                              </p>
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </td>
                  </tr>
                  <!-- footer -->
                  <tr>
                    <td>
                      <table
                        align='center'
                        border='0'
                        cellpadding='0'
                        cellspacing='0'
                        style='background-color: #4e2a84; padding: 20px 0 20px 0'
                        width='100%'
                      >
                        <tbody>
                          <tr>
                            <td align='center' style='padding-bottom: 10px'>
                              <p>
                                <a href='https://www.library.northwestern.edu'
                                  ><img
                                    alt='Northwestern University Library'
                                    src='https://nul-public.s3.amazonaws.com/work-archiver/northwestern-university.png'
                                /></a>
                              </p>
                            </td>
                          </tr>
                          <tr>
                            <td align='center' style='padding-bottom: 20px'>
                              <p style='font-size: 12px; font-weight: bold; margin: 0'>
                                <a
                                  href='https://dc.library.northwestern.edu/'
                                  style='color: #ffffff'
                                  >VISIT NUL DIGITAL COLLECTIONS NOW</a
                                >
                              </p>
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </td>
                  </tr>
                </tbody>
              </table>
              <!--[if gte mso 15]></td></tr></table><![endif]-->
            </body>
          </html>